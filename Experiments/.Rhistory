pnorm(24,mean = 21,sd=5)
z
?pnorm
qnorm(09,mean=21,sd=5)
qnorm(.9,mean=21,sd=5)
qnorm(.9)
qnorm(.1)
qnorm(.1,mean=21,sd=5)
choose(10,5)
choose(10,1)
?rbinom
dbinom(8,10,0.13)
pbinom(3,10,0.5)
pbinom(5,10,0.5)
pbinom(10,10,0.5)
pbinom(0,10,0.5)
pbinom(11,10,0.5)
pbinom(-0.2,10,0.5)
qbinom(0.5,10,0.5)
qbinom(0.6,10,0.5)
qbinom(0.7,10,0.5)
factor(3)
factorial(3)
dbinom(5,20,.262)
1000*.262*(1-.262)
x = rbinom(10,100,.5)
x
x = rbinom(100,10,.5)
x
hist((x))
hist(x)
x = rbinom(100,100,.5)
hist(x)
pnorm(1.29)
10/0.25
dbinom(6,10,.56)
dbinom(2,10,.56)
dbinom(600,1000,.56)
pbinom(60,100,.56)
pbinom(59.5,100,.56)
dbinom(2,3,0.51)
pbinom(2.5,7,0.3)
1-0.647
0.23*0.61/(0.23*0.61+.77*.73)
pnorm(49.5,160,.28)
pbinorm(49.5,160,.28)
pbinom(49.5,160,.28)
m = 160*.28
m
s = sqrt(160*.28*.72)
s
pnorm(50,m,s)
1-0.93^10
12
.055*.99/(.055*.99+.945*.995)
.055*.99/(.055*.99+.945*.005)
pnorm(34.5,3000000,.00001)
m = 3000000-.00001
m
m = 3000000*.00001
m
s= sqrt(3000000*.00001*(1-.00001))
s
pnorm(35,m,s)
length
library(ggplot2)
pnorm(-2)
pnorm(0)
qnorm(0.025)
qnorm(0.5)
0.6
qnorm(0.01)
(3.83-3.53)/4
(3.83+3.53)/2
qnorm(0.01)
pnorm(-1.73)
(128+147)/2
qnorm(0.025)
(147-128)/1.96/2
qnorm(0.05)
137.5-1.64*4.847
137.5-1.95*4.847
load("E:/SCI论文/R/DATA.RData")
load("E:/我的坚果云/sciR/R/DATA.RData")
load("E:/我的坚果云/sciR/R/DATA.RData")
load("E:/我的坚果云/Untitled.RData")
View(t1)
View(t1)
save(t1,'t1.csv')
write.csv(c1,'t.csv')
write.csv(t1,'t.csv')
getwd()
boxplot(mtcars$mpg)
install.packages("rstatscn")
help(package=”rstatscn”)
library(rstatscn)
help(package=”rstatscn”)
help(package='rstatscn')
statscnDbs()
statscnQueryZb(zbid = "zb", dbcode = "hgnd")
statscnQueryZb(zbid = "statscnRegions(dbcode = "fsnd")", dbcode = "hgnd")
statscnRegions(dbcode = "fsnd")
statscnRegions('csnd')
statscnRegions('gjnd')
statscnRegions('fsnd')
statscnQueryData(zb=”A0201″,dbcode=”hgnd”,rowcode=’zb’,colcode=’sj’,moreWd=list(name=NA,value=NA))
statscnQueryData(zb = "A0201", dbcode = "hgnd", rowcode = "zb",
colcode = "sj", moreWd = list(name = NA, value = NA))
df=statscnQueryData('A0201',dbcode='hgnd')
df=statscnQueryData('A0201',dbcode='hgnd')
statscnDbs()
statscnQueryZb(dbcode='hgnd')
statscnQueryZb('A01',dbcode='hgnd')
statscnQueryZb('A01',dbcode='hgnd')
statscnQueryZb('A0102',dbcode='hgnd')
statscnQueryData('A0102',dbcode='hgnd')
statscnQueryLastN(4)
statscnQueryLastN(4)
statscnQueryData('A0102',dbcode='hgnd')
statscnQueryZb('A01',dbcode='fsnd')
statscnRegions(dbcode='fsnd')
statscnQueryData('A0101',dbcode='fsnd',moreWd=list(name='reg',value='120000'))
trainBDF = read.csv("C:/Users/younggy/Desktop/smart-meter/data3/acs-f2/trainBDF_session1")
testBDF = read.csv("C:/Users/younggy/Desktop/smart-meter/data3/acs-f2/testBDF_session2")
library(class)
knnvery <- function(trainBDF,testBDF,k) {
pred_label <- knn(train = trainBDF[,2:7], test = testBDF[,2:7], cl = trainBDF[,9], k=1)
return(mean(pred_label==testBDF[,9]))
}
for (i in 1:30){
print(i)
}
l = c()
l = c()
for (i in 1:30){
l = c(l,i)
}
l
KNNTestPrecisionPerK_OriginalWay = c()
for (i in 1:30){
knnvery(trainBDF,testBDF,i)
}
KNNTestPrecisionPerK_OriginalWayKNNTestPrecisionPerK_OriginalWay
for (i in 1:30) {
KNNTestPrecisionPerK_OriginalWay = c(KNNTestPrecisionPerK_OriginalWay, i)
}
KNNTestPrecisionPerK_OriginalWay
KNNTestPrecisionPerK_OriginalWay = c()
for (i in 1:30) {
KNNTestPrecisionPerK_OriginalWay = c(KNNTestPrecisionPerK_OriginalWay, knnvery(trainBDF,testBDF,i))
}
KNNTestPrecisionPerK_OriginalWay
?write.csv
write.csv(BIGBDF,"C:/Users/younggy/Desktop/smart-meter/data3/acs-f2/KNNTestPrecisionPerK_OriginalWay.csv",
col.names=FALSE,row.names = FALSE)
write.csv(BIGBDF,"C:/Users/younggy/Desktop/smart-meter/data3/acs-f2/KNNTestPrecisionPerK_OriginalWay.csv",
,row.names = FALSE)
write.csv(KNNTestPrecisionPerK_OriginalWay,"C:/Users/younggy/Desktop/smart-meter/data3/acs-f2/KNNTestPrecisionPerK_OriginalWay.csv",
col.names=FALSE,row.names = FALSE)
write.csv(KNNTestPrecisionPerK_OriginalWay,"C:/Users/younggy/Desktop/smart-meter/data3/acs-f2/KNNTestPrecisionPerK_OriginalWay.csv",
,row.names = FALSE)
qplot(1:30,KNNTestPrecisionPerK_OriginalWay)
library(ggplot2)
qplot(1:30,KNNTestPrecisionPerK_OriginalWay)
qplot(1:30,KNNTestPrecisionPerK_OriginalWay) + ylim(0,1)
View(trainBDF)
trainForKNN_scale =  scale(trainBDF[,2:7])
testForKNN_scale  =  scale(testBDF[,2:7])
?data.frame
names(testBDF[,2:7])
trainForKNN_scale =  scale(trainBDF[,2:7])
testForKNN_scale  =  scale(testBDF[,2:7])
trainForKNN_scale = data.frame(trainForKNN_scale); names(trainForKNN_scale) = names(trainBDF[,2:7])
testForKNN_scale = data.frame(testForKNN_scale); names(testForKNN_scale) = names(testBDF[,2:7])
head(trainForKNN_scale)
trainForKNN_scale$category = trainBDF$category
testForKNN_scale$category = testBDF$category
head(trainForKNN_scale)
knnvery <- function(trainBDF,testBDF,k) {
pred_label <- knn(train = trainBDF[,1:6], test = testBDF[,1:6], cl = trainBDF[,7], k)
return(mean(pred_label==testBDF[,7]))
}
knnvery <- function(trainBDF,testBDF,k) {
pred_label <- knn(train = trainBDF[,1:6], test = testBDF[,1:6], cl = trainBDF[,7], k=k)
return(mean(pred_label==testBDF[,7]))
}
knnvery <- function(trainBDF,testBDF,k) {
pred_label <- knn(train = trainBDF[,1:6], test = testBDF[,1:6], cl = trainBDF[,7], k=k)
return(mean(pred_label==testBDF[,7]))
}
KNNTestPrecisionPerK_OriginalWay = c()
for (i in 1:30) {
KNNTestPrecisionPerK_OriginalWay = c(KNNTestPrecisionPerK_OriginalWay, knnvery(trainForKNN_scale,testForKNN_scale,k=i))
}
KNNTestPrecisionPerK_OriginalWay
qplot(1:30,KNNTestPrecisionPerK_OriginalWay) + ylim(0,1)
write.csv(KNNTestPrecisionPerK_OriginalWay,"C:/Users/younggy/Desktop/smart-meter/data3/acs-f2/KNNTestPrecisionPerK_OriginalWay.csv",
row.names = FALSE)
remove(i)
remove(l)
save.image("C:/Users/younggy/Desktop/smart-meter/data3/acs-f2/trainAndTestDataInDifferentSession.RData")
a = c(-1,+1,-1,+1)
b = c(-1,-1,1,1)
y = c(52,74,62,80)
p = lm(y~a+b+a*b)
p
a = b = c = c(-1,1)
design = expand.grid(a=a,b=b,c=c)
a = design$a
b = design$b
c = design$c
y = c(5,30,6,33,4,3,5,4)
water = lm(t~a*b*c)
summary(water)
a = b = c = c(-1,1)
design = expand.grid(a=a,b=b,c=c)
a = design$a
b = design$b
c = design$c
y = c(5,30,6,33,4,3,5,4)
water = lm(t~a*b*c)
a = b = c = c(-1,1)
design = expand.grid(a=a,b=b,c=c)
a = design$a
b = design$b
c = design$c
y = c(5,30,6,33,4,3,5,4)
water = lm(y~a*b*c)
summary(water)
library(pid)
paretoPlot(water)
setwd("E:/Github/MyCodeWork/Experiments")
help("tradeOffTable")
d = a*b
e = a*c
f = b*c
g = a*b*c
y = c(320,276,306,290,272,274,290,255)
m1 = lm(y~a*b*c)
a = b = c = c(-1,1)
design = expand.grid(a=a,b=b,c=c)
a = design$a
b = design$b
c = design$c
d = a*b
e = a*c
f = b*c
g = a*b*c
y = c(320,276,306,290,272,274,290,255)
m1 = lm(y~a*b*c)
paretoPlot(m1)
library("pid", lib.loc="~/R/win-library/3.2")
help("tradeOffTable")
a = b = c = c(-1,1)
design = expand.grid(a=a,b=b,c=c)
a = design$a
b = design$b
c = design$c
a
b
c
a = c(-1,1,-1,1)
b = c(-1,-1,1,1)
c = c(1,-1,-1,1)
y = c(3,9,3,7)
m1 = lm(y~a*b*c)
paretoPlot(m1)
summary(m1)
a = b = c = c(-1,1)
design = expand.grid(a=a,b=b,c=c)
a = design$a
b = design$b
c = design$c
a
b
c
d = a*b*c
d
y = c(26,27,24,26,33,37,32,33)
m1 = lm(y~a*b*c*d)
summary(m1)
paretoPlot(m1)
a
b
a
b
r = c(-1,1,-1,1)
f = c(-1,-1,1,1)
p = c(1,-1,-1,1)
y = c(1,0.75,2,1.25)
lm(y~r*f*p)
a = b = c = c(-1,1)
design = expand.grid(a=a,b=b,c=c)
a = design$a
b = design$b
c = design$c
y = c(80,91,78,93,85,93,87,90)
f = t = s = c(-1,1)
design = expand.grid(f=f,t=t,s=s)
f = design$f
t = design$t
s = design$s
y = c(80,91,78,93,85,93,87,90)
lm(y~f*t*s)
a = b = c = c(-1,1)
design = expand.grid(a=a,b=b,c=c)
a = design$a
b = design$b
c = design$c
a
b
c
d = a*b
e = a*c
f = b*c
y = c(325,330,326,300,272,265,300,275)
m = lm(y~a*b*c*d*e*f)
m
paretoPlot(m)
pnorm?
sa
?pnorm
pnorm(0)
pnorm(1)
pnorm(3)
pnorm(5.2,mean=4,sd=3)
pnorm(2.8,mean=4,sd=3)
1-pnorm(2.8,mean=4,sd=3)
pnorm(2.2,mean=4,sd=3)
1-pnorm(0.75,mean=0,sd=1)
pnorm(-1.25,mean=0,sd=1)
pnorm(2,mean=2,sd=3)-pnorm(-1,mean=2,sd=3)
help("tradeOffTable")
help(popcorn)
library(pid)
help('manufacture')
manufacture(P=0.75,T=325)
manufacture(P=0.5,T=320)
manufacture(P=0.75,T=325)
manufacture(P=0.75,T=325)
manufacture(P=0.75,T=325)
T
P1 = c(0.75,0.5,1,0.5,1)
T1 = c(325,320,320,330,330)
P1 = c(407,193,468,310,571)
P1 = c(0.75,0.5,1,0.5,1)
T1 = c(325,320,320,330,330)
Y0 = c(407,193,468,310,571)
Y1 = c(390,197,472,314,575)
P1 = C(0,-1,1,-1,1)
T1 = c(0,-1,-1,1,1)
Y1 = c(407,193,468,310,571)
Y0 = c(390,197,472,314,575)
P1 = c(0,-1,1,-1,1)
T1 = c(0,-1,-1,1,1)
Y1 = c(407,193,468,310,571)
Y0 = c(390,197,472,314,575)
model
model.base.1 = lm(y~P1*T1)
model.base.1 = lm(y1~P1*T1)
model.base.1 = lm(Y1~P1*T1)
summary(model.base.1)
contourPlot(model.base.1,'P1','T1')
predict(model.base.1,c(0,0))
new.df = data.frame(P1=0,T1=0)
new.df
predict(model.base.1,new.df)
new.df = data.frame(P1=P1,T1=T1)
predict(model.base.1,new.df)
a = c(-1,1,-1,1,1.8,2.6)
y = c(39,32,37.5,31.5,26,24.5)
b = c(-1,-1,1,1,-1,-1)
m = lm(y~a*b)
summary(m)
paretoPlot(m)
m2 = lm(y~a+I(a^2))
summary(m)
summary(m2)
a = c(-1,1,-1,1)
b = c(-1,-1,1,1)
y = c(39,32,37.5,31.5)
m = lm(y~a*b)
summary(m)
a = b = c = c(-1,1)
design = expand.grid(a=a,b=b,c=c)
a = design$a
b = design$b
c = design$c
a
b
c
c(a,10)
a = b = c = c(-1,1)
design = expand.grid(a=a,b=b,c=c)
a = design$a
b = design$b
c = design$c
y = c(15,5,16,4,15,5,16,4)
a = c(a,0)
b = c(b,0)
c = c(c,1)
y = c(y,12)
m = lm(y~a*b*c)
summary(m)
m = lm(y~a+i(a^2))
summary(m)
m = lm(y~a+I(a^2))
summary(m)
s = c(-1,1,-1,1,0)
v = c(-1,-1,1,1,0)
y = c(4,5,12,13,8)
m = lm(y~s*v)
summary(m)
paretoPlot(m)
v = c(-1,-1,1,1,0,2)
y = c(4,5,12,13,8,20)
m = lm(y~v)
summary(m)
m = lm(y~v+I(v^2))
summary(m)
a = 3
b = 2
12-2*a-0.1*b+0.2*a*b
13-2*a-0.5*a^2
a = c(-1,1,-1,1,0)
b = c(-1,-1,1,1,0)
c = c(1,-1,-1,1,0)
y = c(80,86,82,89,84)
m = lm(y~a*b)
summary(m)
(357.5-312.5)/12.5
(357.5-312.5)/12.5
a = c(-1,1,-1,1,0)
b = c(-1,-1,1,1,0)
c = c(1,-1,-1,1,0)
y = c(80,86,82,89,84)
m = lm(y~a*b)
summary(m)
84.2+3.25*3.6+1.25*1+0.25*3.6
contourPlot(m,'a','b')
(370-357.5)/2
370-6.25
a = c(-1,-1,1,1,0)
b = c(-1,1,-1,1,0)
y = c(93,96,94,79,95)
m = lm(y~a*b)
summary(m)
contourPlot(model.base.1,'P1','T1')
sqrt(2)
sqrt(2)*6.25
sqrt(2)*2.5
sqrt(2)*6.25+363.75
-sqrt(2)*6.25+363.75
sqrt(2)*2.5+22.5
-sqrt(2)*2.5+22.5
p = c(-1,1,-1,1)
t = c(-1,-1,1,1)
y = c(12,5,13,6)
m = lm(y~p*t)
summary(m)
contourPlot(m)
D <- c(0, -1, +1, -1, +1, 0, 0, +1.41, 0, -1.41, 0)
T <- c(0, -1, -1, +1, +1, 0, -1.41, 0, 1.41, 0, 0)
y <- c(60, 49, 30, 62, 50, 56, 26, 40, 63, 57, 62)
m = lm(y~D*T)
summary(m)
contourPlot(m)
m = c(-1,1,-1,1,0)
h = c(-1,-1,1,1,0)
y = c(4,9.5,5,5.5,8)
m1 = lm(y~m*h)
summary(m)
contourPlot(m)
m = c(-1,1,-1,1,0)
h = c(-1,-1,1,1,0)
y = c(4,9.5,5,5.5,8)
m1 = lm(y~m*h)
summary(m1)
contourPlot(m1)
m = c(-1,1,-1,1,0,0,sqrt(2),0,-sqrt(2))
h = c(-1,-1,1,1,0,-sqrt(2),0,sqrt(2),0)
y = c(4,9.5,5,5.5,8,8,8,4,2)
m1 = lm(y~m*h)
summary(m1)
contourPlot(m1)
?contourPlot
contourPlot(m1,N=150)
contourPlot(m1,N=300)
contour(m1)
contourLines(m)
contourLines(m1)
m1 = lm(y~m*h+I(m^2)+I(h^2))
summary(m1)
contourPlot(m1,N=300)
contour(m1)
contourLines(m1)
